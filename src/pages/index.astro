---
import "../css/fonts.css";
import "../css/keyframes.css";
import Nav from "../components/Nav.astro";
import Iam from "../components/Iam.astro";
import Myself from "../components/Myself.astro";
import Projects from "../components/Projects.astro";
import Skills from "../components/Skills.astro";
import Contact from "../components/Contact.astro";
import Footer from "../components/Footer.astro";
---

<html class="w-full" lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta
      property="og:image"
      content="https://images.unsplash.com/photo-1579403124614-197f69d8187b?q=80&w=2564&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
    />
    <meta property="og:title" content="CB-WebDevelopment" />
    <meta
      property="og:description"
      content="Full-stack development"
    />
    <meta property="og:url" content="https://ColinBlome.dev" />
    <meta property="og:type" content="website" />

    <title>Portfolio</title>
  </head>
  <body class="w-full flex-col items-center content-center fadein2">
    <div id="home"></div>
    <Nav />

    <Iam />
  </body>
  <div id="about">
    <Myself />
  </div>

  <div id="skills">
    <Skills />
  </div>
  <div id="projects">
    <Projects />
  </div>
  <div id="contact"></div>
  <Contact />
  <div></div>

  <Footer />
</html>

<style>
  * {
    scroll-behavior: smooth;
    font-family: mono;
    padding: 0;
    margin: 0;
  }

  #about {
    padding-top: 45px;
  }
  #skills {
    padding-top: 35px;
  }
  #projects {
    padding-top: 80px;
  }
  #contact {
    padding-top: -150px;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("div[id]");
    const navLinks = document.querySelectorAll("nav a");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            navLinks.forEach((link) => {
              if (link.getAttribute("href") === "#" + entry.target.id) {
                link.classList.add("active");
              } else {
                link.classList.remove("active");
              }
            });
          }
        });
      },
      {
        threshold: 0.5, // Trigger bei 70% Sichtbarkeit
        rootMargin: "0px",
      }
    );

    sections.forEach((section) => {
      observer.observe(section);
    });
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const boxes = document.querySelectorAll(".offscreen");

    const observerOptions = {
      root: null,
      rootMargin: "0px",
      threshold: 0.2,
    };

    const observerCallback = (entries, observer) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("in-view");
        } else {
          entry.target.classList.remove("in-view");
        }
      });
    };

    const observer = new IntersectionObserver(
      observerCallback,
      observerOptions
    );

    boxes.forEach((offscreen) => {
      observer.observe(offscreen);
    });
  });
</script>
