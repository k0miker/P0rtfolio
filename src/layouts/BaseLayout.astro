---
const { title, description, image } = Astro.props;
import "../utils/performanceStyles.css";
---

<html lang="de" class="w-full">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO Meta Tags -->
    <title>{title || 'Colin Blome - Web Developer Portfolio'}</title>
    <meta name="description" content={description || 'Portfolio von Colin Blome, Web Developer aus Deutschland. Spezialisiert auf moderne Web-Entwicklung mit Fokus auf Benutzerfreundlichkeit und Responsive Design.'} />
    
    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title || 'Colin Blome - Web Developer Portfolio'} />
    <meta property="og:description" content={description || 'Portfolio von Colin Blome, Web Developer aus Deutschland.'} />
    <meta property="og:image" content={image || 'https://i.imgur.com/ELVyRRc.jpeg'} />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={new URL(Astro.url).hostname} />
    <meta property="twitter:url" content={Astro.url} />
    <meta name="twitter:title" content={title || 'Colin Blome - Web Developer Portfolio'} />
    <meta name="twitter:description" content={description || 'Portfolio von Colin Blome, Web Developer aus Deutschland.'} />
    <meta name="twitter:image" content={image || 'https://i.imgur.com/ELVyRRc.jpeg'} />
    
    <!-- Font Awesome f端r Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  </head>
  <body class="w-full flex-col items-center content-center fadein2 custom-scrollbar">
    <slot />
    
    <!-- Performance-Monitor Script einbinden -->
    <script>
      document.addEventListener('DOMContentLoaded', async () => {
        try {
          // Zuerst den gespeicherten Modus direkt anwenden, bevor wir warten
          const savedMode = localStorage.getItem('performance-mode') || 'high';
          document.documentElement.setAttribute('data-performance', savedMode);
          
          // Wenn wir im Low-Mode sind, Backgrounds sofort deaktivieren
          if (savedMode === 'low') {
            document.documentElement.classList.add('disable-backgrounds');
            document.documentElement.classList.add('force-reduced-motion');
          }
          
          // Performance-Monitor dynamisch importieren
          const { performanceMonitor } = await import('../utils/performanceMonitor.js');
          
          // Performance-Monitor mit dem gespeicherten Modus initialisieren
          if (performanceMonitor) {
            performanceMonitor.setPerformanceMode(savedMode);
            
            // Bei niedriger FPS prefers-reduced-motion simulieren
            performanceMonitor.onPerformanceModeChange((mode) => {
              if (mode === 'low') {
                // F端ge Klasse hinzu, die reduzierte Bewegung f端r alle Elemente forciert
                document.documentElement.classList.add('force-reduced-motion');
                document.documentElement.classList.add('disable-backgrounds');
              } else {
                document.documentElement.classList.remove('force-reduced-motion');
                // Hintergr端nde nur wieder aktivieren wenn wir auf "high" gehen
                if (mode === 'high') {
                  document.documentElement.classList.remove('disable-backgrounds');
                }
              }
            });
          }
        } catch (e) {
          console.error('Fehler beim Laden des Performance-Monitors:', e);
        }
      });
    </script>
  </body>
</html>
