---
import homeBg from "../assets/images/home.jpg";
---
<div class="bg-container" id="home-section" style={`background-image: url(${homeBg.src})`}>
<div class="console-container font-[Marker] font-extrabold text-4xl">
  <span id="text" class="offscreen"></span><div
    class="console-underscore text-[tomato] animate-ping"
    id="console"
  >
    &#95;
  </div>
</div>
<div class="down">
  <a href="#contact" class=""
    ><div >/down</div><div><i class=" fa-solid fa-arrow-down"></i></div></a
  >
</div>
</div>
<style>
  .hidden {
    opacity: 0;
  }
  span {
    min-height: 40px;
  }
  
  .down {
    display: flex;
    justify-content: center;
    z-index: 10;
    position: relative;
    bottom: 10px;    
    
    background-color: var(--bg-primary);
  }
  a {
    color: var(--text-secondary);
    background-color: var(--bg-primary);
    bottom: 20px;
    width: 75px;
    font-family: inter;
    font-size: 16px;
    font-weight: 600;
    border-radius: 0.5em;
    letter-spacing: 0.05em;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: absolute;
    cursor: pointer;
    transition: all 1s;
    flex-direction: column;
    div {
      padding: 5px;
    }
  }
  a:hover {
    transform: translateY(5px);
    background-color: var(--bg-primary);
  }
  a:hover div {
    color: tomato;
  }
  a:hover div:nth-of-type(1) {
    display: none;
    div {
      display: block;
    }
  }
  a div:nth-of-type(2) {
    display: none;
  }
  a:hover div:nth-of-type(2) {
    display: block;
    div {
      display: block;
    }
  }

  .bg-container{
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    transition: animation-play-state 0.3s;
    min-height: 100vh;
  }
  
  .bg-container.animate {
    animation: slidein linear 55s infinite alternate;
  }

  .console-container {
    color: white;
    box-shadow: inset 0px -2vh 5vw 10px #0000006f;
    
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    
    position: relative;
    z-index: 1;
    top: 0;
    left: 0;
    right: 0;
    bottom: -30px;
    margin: auto;
  }
  
  .console-underscore {
    display: inline-block;
    position: relative;
    top: 0;
    left: 10px;
  }
  .console-container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 0;  
    background: rgba(0, 0, 0, 0.492);
    animation: fadein 4s;
    background-size: cover;
    background-attachment: fixed;
    mask-image: url("https://i.imghippo.com/files/wula7758fc.png");
    
    /* Verbesserte Maskenpositionierung für konsistente Zentrierung */
    mask-position: center center;
    mask-size: min(750px, 100vw);
    mask-position:  52% 50%;
    mask-repeat: no-repeat;
    mask-origin: center;
    mask-mode: alpha;
    mask-clip: content-box;
    backdrop-filter: blur(3px);
    
  }
  
  /* Responsive Anpassungen für verschiedene Bildschirmgrößen */
  @media screen and (max-width: 768px) {
    .console-container {
      font-size: 1.5em;
    }
    
    .console-container::before {
      /* Kleinere Maske für mobile Geräte, bleibt zentriert */
      mask-size: min(450px, 90vw);
    }
  }
  
  /* Sehr kleine Bildschirme */
  @media screen and (max-width: 480px) {
    .console-container::before {
      /* Noch kleinere Maske, aber immer noch zentriert */
      mask-size: min(350px, 95vw);
    }
  }
</style>
<script>
  // function([string1, string2],target id,[color1,color2])
  consoleText(
    [
      "Hey there.",
      "I'm Colin.",
      "Web Developer.",
      "Gamer.",
      "Bonsai Enthusiast.",
      "Nerd.",
    ],
    "text",
    ["tomato"]
  );
  function consoleText(words, id, colors) {
    if (colors === undefined) colors = ["#fff"];
    let visible = true;
    let con = document.getElementById("console");
    let letterCount = 1;
    let x = 1;
    let waiting = false;
    let target = document.getElementById(id);
    target.setAttribute("style", "color:" + colors[0]);
    window.setInterval(function () {
      if (letterCount === 0 && waiting === false) {
        waiting = true;
        target.innerHTML = words[0].substring(0, letterCount);
        window.setTimeout(function () {
          let usedColor = colors.shift();
          colors.push(usedColor);
          let usedWord = words.shift();
          words.push(usedWord);
          x = 1;
          target.setAttribute("style", "color:" + colors[0]);
          letterCount += x;
          waiting = false;
        }, 300);
      } else if (letterCount === words[0].length + 1 && waiting === false) {
        waiting = true;
        window.setTimeout(function () {
          x = -1;
          letterCount += x;
          waiting = false;
        }, 500);
      } else if (waiting === false) {
        target.innerHTML = words[0].substring(0, letterCount);
        letterCount += x;
      }
    }, 80);
    
  }

  // Animation nur starten, wenn Sektion im Viewport ist
  document.addEventListener("DOMContentLoaded", () => {
    const homeSection = document.getElementById("home-section");
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add("animate");
        } else {
          entry.target.classList.remove("animate");
        }
      });
    }, { threshold: 0.1 });
    
    if (homeSection) {
      observer.observe(homeSection);
    }
  });
</script>
